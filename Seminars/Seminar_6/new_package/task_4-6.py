""" Задание 4
 Создайте модуль с функцией внутри.
 Функция получает на вход загадку, список с возможными
вариантами отгадок и количество попыток на угадывание.
 Программа возвращает номер попытки, с которой была
отгадана загадка или ноль, если попытки исчерпаны."""

""" Задание 5
 Добавьте в модуль с загадками функцию, которая хранит
словарь списков.
 Ключ словаря - загадка, значение - список с отгадками.
 Функция в цикле вызывает загадывающую функцию, чтобы
передать ей все свои загадки."""

""" Задание 6
 Добавьте в модуль с загадками функцию, которая
принимает на вход строку (текст загадки) и число (номер
попытки, с которой она угадана).
 Функция формирует словарь с информацией о результатах
отгадывания.
 Для хранения используйте защищённый словарь уровня
модуля.
 Отдельно напишите функцию, которая выводит результаты
угадывания из защищённого словаря в удобном для чтения
виде.
 Для формирования результатов используйте генераторное
выражение"""

_results = dict()


def secrets(riddle: str, answers: list[str], counter: int) -> int:
    print(f'Отгадайте загадку -> {riddle}')
    for i in range(counter):
        answer = input("Введите ответ: ")
        if answer in answers:
            answer_counter(riddle, i + 1)
            return i + 1
        elif answer not in answers and i != counter - 1:
            print(f"Осталось попыток: {counter - i - 1}")
            continue
        answer_counter(riddle, 0)
        return 0


def storage_test():
    dict_riddle = {'Зимой и летом одним цветом': ['ель', 'ёлка', 'сосна'],
                   'Не лает, не кусает, в дом не пускает': ['замок'],
                   'Сидит дед во сто шуб одет': ['лук', 'луковица'], }
    for test_data in dict_riddle.items():
        print(secrets(*test_data, counter=3))


def answer_counter(riddle: str, result: int):  # для логирования результатов
    global _results
    _results.setdefault(riddle, result)


def print_results():
    global _results
    for key, value in _results.items():
        print(f'Загадка "{key}" -> Попытки: {value}')


if __name__ == '__main__':
    # print(secrets('Зимой и летом одним цветом', ['ель', 'ёлка', 'сосна'], 5))
    storage_test()
    print_results()
